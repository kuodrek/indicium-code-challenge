version: '3'
x-airflow-common:
  &airflow-common
  # image: apache/airflow:2.2.4
  build: .
  environment:
    &airflow-common-env
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
  volumes:
    - ./data:/data
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    &airflow-common-depends-on
    postgres:
      condition: service_healthy

services:
  db:
    container_name: northwind_db
    image: postgres:12
    environment:
      POSTGRES_DB: northwind
      POSTGRES_USER: northwind_user
      POSTGRES_PASSWORD: thewindisblowing
    volumes:
      - ./dbdata:/var/lib/postgresql/northwind_data
      - ./data/northwind.sql:/docker-entrypoint-initdb.d/northwind.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "northwind_user", "-d", "northwind"]
      interval: 5s
      retries: 5
    ports:
      - "5432:5432"

  postgres:
    container_name: airflow_db
    image: postgres:12
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/airflow_data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always
    ports:
    - "5433:5432"

  output_db:
    container_name: output_db
    image: postgres:12
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: northwind_output_db
    volumes:
      - postgres-db-volume:/var/lib/postgresql/output_db
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", northwind_output_db]
      interval: 5s
      retries: 5
    restart: always
    ports:
    - "5434:5432"

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash -c "/bin/bash -c \"$${@}\""
    # yamllint disable rule:line-length
    command: |
      /bin/bash -c "
        airflow db init
        airflow db upgrade
        airflow users create -r Admin -u airflow -e airflow@airflow.com -f admin -l user -p airflow
      "
    environment:
      <<: *airflow-common-env

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    environment:
      <<: *airflow-common-env
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

volumes:
  postgres-db-volume:
  dbdata:
  data: